name: CI for SCCstore

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check Out Project 
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven

    - name: Build with Maven
      run: mvn -B package -Dnative --file pom.xml
    
    # for docker build see https://docs.docker.com/ci-cd/github-actions/
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push - UI
      id: docker_build_ui
      uses: docker/build-push-action@v2
      with:
        context: ./ui/
        file: ./ui/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/sccstore-ui:latest,${{ secrets.DOCKER_HUB_USERNAME }}/sccstore-ui:${{ github.sha }} 

    - name: Image digest - UI
      run: echo ${{ steps.docker_build_ui.outputs.digest }}

    - name: Build and push - PCOMPLAINTS
      id: docker_build_pcomplaints
      uses: docker/build-push-action@v2
      with:
        context: ./pcomplaints/
        file: ./pcomplaints/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/sccstore-pcomplaints:latest,${{ secrets.DOCKER_HUB_USERNAME }}/sccstore-pcomplaints:${{ github.sha }} 

    - name: Image digest - PCOMPLAINTS
      run: echo ${{ steps.docker_build_pcomplaints.outputs.digest }}

    - name: Build and push - QSERVERLESS
      id: docker_build_qserverless
      uses: docker/build-push-action@v2
      with:
        context: ./qserverless/
        file: ./qserverless/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/sccstore-qserverless:latest,${{ secrets.DOCKER_HUB_USERNAME }}/sccstore-qserverless:${{ github.sha }} 

    - name: Image digest - QSERVERLESS
      run: echo ${{ steps.docker_build_qserverless.outputs.digest }}